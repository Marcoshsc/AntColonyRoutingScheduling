formigas = soluçõbes

reduzir a duração total das viagens.

cada viagem tem uma duração associada.

cada tripulacao comeca e termina a trabalhar em dois dados momentos do dia.
  
probabilidade:

p = {
  0, caso tempo até acabar expediente - tempo viajem < 0;
  feromonio^{alpha} * (1 / ((tempo_expediente - (tempo até acabar expediente - tempo viagem)) * numero_disponiveis_rota()))^{beta}
  / somatorio disso tudo pra as rotas ainda nao atribuidas.
}

soluc = matriz de tamanho n, com n = size(rotas)
cada posição possui um array indicando a rota e a tripulação que vai atendê-la, em ordem.
logo:
[
  [rota 1, tripulacao 2, 800], 800 + 100
  [rota 3, tripulacao 1, 200], 200 + 1000
  [rota 4, tripulacao 4, 100], 100 + 500
  [rota 2, tripulacao 1, 400], 
  [rota 5, tripulacao 2, 420]
]

feromonio vai ser distribuido por tripulação e rota

a duração de uma viagem já contabiliza o tempo de retorno ao ponto inicial.

se uma tripulacao aparece de novo, significa que a sua viagem anterior acabou.

atribui-se uma rota inicial para cada tripulacao, depois vai pegando a que terminar primeiro e re-atribuindo a novas rotas, ate
terminar de atender todas as rotas. sempre seguindo o criterio probabilistico acima.

entrada: conjunto de rotas.
Rota: custo (duração)
restrição: carga horária de cada funcionário
heurística da rota: duração da rota / tempo de trabalho que a tripulação ainda possui
probabilidade = feromonio + heurística